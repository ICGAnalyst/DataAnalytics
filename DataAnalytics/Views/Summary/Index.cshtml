
@{
    ViewBag.Title = "Summary";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="search-box" style="position:absolute;top:100px;width:100%" ">
    <div class="search-box-c">
        <div class="form">
            <input type="text" placeholder="Please search..." id="searchsymbol">
            <input type="hidden">
            <button id="search"></button>
        </div>
        <div class="search-box-drop-menu">
            <ul></ul>
        </div>
    </div>
</div>
<div class="stock-Infro">1111111</div>
<div class="show-box" style="width:100%;position: absolute;top:200px;">
    <div class="show-box-c">
        <div class="show-title-box">
            <ul>
                <li> <a href="#">Home</a></li>
                <li class="active"><a href="#">Summary</a></li>
                <li><a href="/Chart">Chart</a></li>
                <li><a href="#">History Data</a></li>
            </ul>
        </div>
    </div>
    <div class="show-chart-box">
        <!--
        <div class="show-chart-box-c" style="width:970px;padding: 10px">
            <div class="calendar" style="float:left">
                <label for="from">From</label>
                <input type="text" id="from" name="from" style="background-image: radial-gradient(73% 147%, #EADFDF 59%, #ECE2DF 100%), radial-gradient(91% 146%, rgba(255,255,255,0.50) 47%, rgba(0,0,0,0.50) 100%); background-blend-mode: screen;">
                <label for="to">To</label>
                <input type="text" id="to" name="to" style="background-image: radial-gradient(73% 147%, #EADFDF 59%, #ECE2DF 100%), radial-gradient(91% 146%, rgba(255,255,255,0.50) 47%, rgba(0,0,0,0.50) 100%); background-blend-mode: screen;">
            </div>
            <button class="apply">Apply</button>
        </div>
        -->
        <div id="summary-container" style="height: 400px; min-width: 310px"></div>
    </div>

</div>

<script src="~/Scripts/highstock.js"></script>
<script src="~/Scripts/exporting.js"></script>
<script src="~/Scripts/export-data.js"></script>
<script>
    $(function () {
        'user strict';

        function Trim(str, is_global) {
            var result;
            result = str.replace(/(^\s+)|(\s+$)/g, "");
            if (is_global.toLowerCase() == "g") {
                result = result.replace(/\s/g, "");
            }
            return result;
        }

        $("#searchsymbol").bind("input propertychange change", function (event) {
            // $("#input_test2").val($("#searchsymbol").val());
            var getSearchSymbol = $("#searchsymbol").val();
            var t = Trim(getSearchSymbol, "g");
            if (t == null || t == "") {
                return;
            } else {
                $.ajax({
                    url: "/SearchSymbol/GetSearchSymbol",
                    type: "POST",
                    data: {
                        searchKey: t
                    },
                    dataType: "json",
                    crossDomain: true,
                    success: function (response) {
                        if (response.len == 0) {
                            $(".search-box-drop-menu").hide();
                            return;
                        } else {
                            $(".search-box-drop-menu").css("display", "block");
                            var str = '';
                            for (var i = 0; i < response.len && i < 10; i++) {
                                str += "<li>" + response.data[i] + "</li>";
                            }
                            $(".search-box-drop-menu ul").html(str);
                            $(".search-box-drop-menu").show();
                        }
                    }
                });
            }
        });

        $(".search-box-drop-menu ul li").on("click", function () {
            $("#searchsymbol").val($(this).html());
            $(".search-box-drop-menu").css("display", "none");
        });
        $("#searchsymbol").bind("keypress", function (event) {
            if (event.keyCode == '13') {
                var symbolKey = $("#searchsymbol").val();
                getSummaryData(symbolKey);
            }
        });

        $("#search").on("click", function (event) {
            var symbolKey = $("#searchsymbol").val();
            getSummaryData(symbolKey);
        });

        $("button.apply").on("click", function (event) {
            var symbolKey = $("#searchsymbol").val();
            //var fromDate = $("#from").val().replace(/-/g, "");
            //var toDate = $("#to").val().replace(/-/g, "");
        });
        $(".show-title-box ul li").click(function () {
            $(this).siblings().removeClass("active");
            $(this).addClass("active");
        });


        function getSummaryData(symbolKey) {
            $.ajax({
                url: "/Summary/GetSummaryData",
                type: "POST",
                dataType: 'json',
                data: { symbol: symbolKey },
                success: function (data) {
                    if (data.len == 0) {
                        alert("No Data Set");
                        return;
                    }
                    // split the data set into ohlc and volume
                    var ohlc = [],
                        volume = [],
                        dataLength = data.len,
                        data = data.data;
                    // set the allowed units for data grouping
                    groupingUnits = [[
                        'week',                         // unit name
                        [1]                             // allowed multiples
                    ], [
                        'month',
                        [1, 2, 3, 4, 6]
                    ]],

                        i = 0;

                    for (i; i < dataLength; i += 1) {
                        ohlc.push([
                            data[i]["DateTime"], // the date
                            data[i]["Open"], // open
                            data[i]["High"], // high
                            data[i]["Low"], // low
                            data[i]["Close"] // close
                        ]);

                        volume.push([
                            data[i]["DateTime"], // the date
                            data[i]["Volume"] // the volume
                        ]);
                    }


                    // create the chart
                    Highcharts.stockChart('summary-container', {

                        rangeSelector: {
                            selected: 1
                        },

                        title: {
                            text: symbolKey + ' Summary'//symbol
                        },

                        yAxis: [{
                            labels: {
                                align: 'right',
                                x: -3
                            },
                            title: {
                                text: 'OHLC'
                            },
                            height: '60%',
                            lineWidth: 2,
                            resize: {
                                enabled: true
                            }
                        }, {
                            labels: {
                                align: 'right',
                                x: -3
                            },
                            title: {
                                text: 'Volume'
                            },
                            top: '65%',
                            height: '35%',
                            offset: 0,
                            lineWidth: 2
                        }],

                        tooltip: {
                            split: true
                        },

                        series: [{
                            type: 'candlestick',
                            name: symbolKey,//symbol
                            data: ohlc,
                            dataGrouping: {
                                units: groupingUnits
                            }
                        }, {
                            type: 'column',
                            name: 'Volume',
                            data: volume,
                            yAxis: 1,
                            dataGrouping: {
                                units: groupingUnits
                            }
                        }]
                    });
                }
            });
        }

    })
</script>
