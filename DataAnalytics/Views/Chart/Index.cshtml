@{
ViewBag.Title = "Chart";
Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="stock-Infro" style="font-size:25px;font-weight:900"></div>
<div class="show-box" style="width:100%;">
<div class="show-box-c">
</div>
<div class="show-chart-box">
<div class="show-chart-box-c" style="width:970px;padding: 10px">
    @*删除控件位置*@
    <div id="addeditem"></div>
    <button class="apply" id="remove">Remove</button>
    <button class="apply" id="add">Add</button>
</div>
<div id="container" style="height: 400px; min-width: 310px"></div>
</div>
</div>
@section Footer{
<script src="~/Scripts/highstock.js"></script>
<script src="~/Scripts/exporting.js"></script>
<!--
<script src="~/Scripts/export-data.js"></script>
-->
<script>
$(function() {
    @*'user strict';*@
    $(".tooplate_menu-ul li:eq(2) a").addClass("tooplate_menu-ul-li-active");

    var symbol = getQueryString("symbol");
    if (symbol == null || symbol == "") {
        symbol = "C";
    } else {
        symbol = symbol.toUpperCase();
    }
    $(".stock-Infro").html("Symbol: " + symbol);

    function getQueryString(name) {
        var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
        var r = window.location.search.substr(1).match(reg);
        if (r != null) return unescape(r[2]); return null;
    }

    $("#add").on("click", function(event) {
        var symbolKey = $("#searchsymbol").val();
        if (symbolKey != null && symbolKey != ""){
            console.log("add: " + symbolKey);
            console.log(symbolKey);
            names.push(symbolKey);
            console.log("add len: " + names);
            redawChart(names);
        }
    });

        $("#remove").on("click", function(event) {
            names.pop();
            seriesCounter--;
            seriesOptions.pop();
            console.log(seriesOptions);
            createChart();
        });

    //stock chart
    var seriesOptions = [],
        seriesCounter = 0,
        //names = ['MSFT'],
        names = [];

    // create the chart when all data is loaded
    var createChart = function () {
        Highcharts.stockChart('container', {
            rangeSelector: {
                selected: 4
            },
            yAxis: {
                labels: {
                    formatter: function () {
                        return (this.value > 0 ? ' + ' : '') + this.value + '%';
                    }
                },
                plotLines: [{
                    value: 0,
                    width: 2,
                    color: 'silver'
                }]
            },
            plotOptions: {
                series: {
                    compare: 'percent'
                }
            },
            tooltip: {
                pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b> ({point.change}%)<br/>',
                valueDecimals: 2
            },
            series: seriesOptions
        });
    };

var redawChart = function(names) {
    console.log('redraw');
    $.each(names, function (i, name) {
        //var name = names[names.length - 1];
        console.log("symbol = " + name);
        $.ajax({
            url: "/Summary/GetSummaryData",
            type: "POST",
            dataType: 'json',
            data: { symbol: name },
            success: function (response) {
                if (response.code == '1') {
                    var data = new Array();
                    for (var count = 0; count < response.len; count++) {
                        var item = response.data[count];
                        data.push([item.DateTime, item.Close]);
                    }
                    //console.log(data);
                    //console.log("i = " + i);
                    //seriesOptions.push({
                    //    name: name,
                    //    data: data
                    //});
                    console.log("seriesCounter = " + seriesCounter);
                    seriesOptions[i] = {
                        name: name,
                        data: data
                    };
                    console.log("seriesOptions:", seriesOptions);
                    seriesCounter++;
                    //console.log("seriesCounter = " + seriesCounter);
                    //console.log("names.length = " + names.length);
                    createChart();
                } else {
                    alert("Unknown error")
                }
            }
        })
    });
};

//redawChart(names);

})
</script>
}

