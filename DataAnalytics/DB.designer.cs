#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAnalytics
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataAnalytics")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAggsByHour(AggsByHour instance);
    partial void UpdateAggsByHour(AggsByHour instance);
    partial void DeleteAggsByHour(AggsByHour instance);
    partial void Insertsymbols(symbols instance);
    partial void Updatesymbols(symbols instance);
    partial void Deletesymbols(symbols instance);
    partial void InsertstageTwo_AllFileData(stageTwo_AllFileData instance);
    partial void UpdatestageTwo_AllFileData(stageTwo_AllFileData instance);
    partial void DeletestageTwo_AllFileData(stageTwo_AllFileData instance);
    partial void InsertCalendar(Calendar instance);
    partial void UpdateCalendar(Calendar instance);
    partial void DeleteCalendar(Calendar instance);
    #endregion
		
		public DBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DataAnalyticsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AggsByHour> AggsByHour
		{
			get
			{
				return this.GetTable<AggsByHour>();
			}
		}
		
		public System.Data.Linq.Table<symbols> symbols
		{
			get
			{
				return this.GetTable<symbols>();
			}
		}
		
		public System.Data.Linq.Table<stageTwo_AllFileData> stageTwo_AllFileData
		{
			get
			{
				return this.GetTable<stageTwo_AllFileData>();
			}
		}
		
		public System.Data.Linq.Table<Calendar> Calendar
		{
			get
			{
				return this.GetTable<Calendar>();
			}
		}
		
		public System.Data.Linq.Table<stageOne_OneFileData> stageOne_OneFileData
		{
			get
			{
				return this.GetTable<stageOne_OneFileData>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AggsByHour")]
	public partial class AggsByHour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _symbolID;
		
		private System.Nullable<int> _Date;
		
		private System.Nullable<int> _Time;
		
		private System.Nullable<decimal> _Open;
		
		private System.Nullable<decimal> _High;
		
		private System.Nullable<decimal> _Low;
		
		private System.Nullable<decimal> _Close;
		
		private System.Nullable<float> _Volume;
		
		private System.Nullable<float> _SplitFactor;
		
		private System.Nullable<int> _Earnings;
		
		private System.Nullable<double> _Dividends;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsymbolIDChanging(System.Nullable<int> value);
    partial void OnsymbolIDChanged();
    partial void OnDateChanging(System.Nullable<int> value);
    partial void OnDateChanged();
    partial void OnTimeChanging(System.Nullable<int> value);
    partial void OnTimeChanged();
    partial void OnOpenChanging(System.Nullable<decimal> value);
    partial void OnOpenChanged();
    partial void OnHighChanging(System.Nullable<decimal> value);
    partial void OnHighChanged();
    partial void OnLowChanging(System.Nullable<decimal> value);
    partial void OnLowChanged();
    partial void OnCloseChanging(System.Nullable<decimal> value);
    partial void OnCloseChanged();
    partial void OnVolumeChanging(System.Nullable<float> value);
    partial void OnVolumeChanged();
    partial void OnSplitFactorChanging(System.Nullable<float> value);
    partial void OnSplitFactorChanged();
    partial void OnEarningsChanging(System.Nullable<int> value);
    partial void OnEarningsChanged();
    partial void OnDividendsChanging(System.Nullable<double> value);
    partial void OnDividendsChanged();
    #endregion
		
		public AggsByHour()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_symbolID", DbType="Int")]
		public System.Nullable<int> symbolID
		{
			get
			{
				return this._symbolID;
			}
			set
			{
				if ((this._symbolID != value))
				{
					this.OnsymbolIDChanging(value);
					this.SendPropertyChanging();
					this._symbolID = value;
					this.SendPropertyChanged("symbolID");
					this.OnsymbolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Int")]
		public System.Nullable<int> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Int")]
		public System.Nullable<int> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Open]", Storage="_Open", DbType="Money")]
		public System.Nullable<decimal> Open
		{
			get
			{
				return this._Open;
			}
			set
			{
				if ((this._Open != value))
				{
					this.OnOpenChanging(value);
					this.SendPropertyChanging();
					this._Open = value;
					this.SendPropertyChanged("Open");
					this.OnOpenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_High", DbType="Money")]
		public System.Nullable<decimal> High
		{
			get
			{
				return this._High;
			}
			set
			{
				if ((this._High != value))
				{
					this.OnHighChanging(value);
					this.SendPropertyChanging();
					this._High = value;
					this.SendPropertyChanged("High");
					this.OnHighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Low", DbType="Money")]
		public System.Nullable<decimal> Low
		{
			get
			{
				return this._Low;
			}
			set
			{
				if ((this._Low != value))
				{
					this.OnLowChanging(value);
					this.SendPropertyChanging();
					this._Low = value;
					this.SendPropertyChanged("Low");
					this.OnLowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Close]", Storage="_Close", DbType="Money")]
		public System.Nullable<decimal> Close
		{
			get
			{
				return this._Close;
			}
			set
			{
				if ((this._Close != value))
				{
					this.OnCloseChanging(value);
					this.SendPropertyChanging();
					this._Close = value;
					this.SendPropertyChanged("Close");
					this.OnCloseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Real")]
		public System.Nullable<float> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplitFactor", DbType="Real")]
		public System.Nullable<float> SplitFactor
		{
			get
			{
				return this._SplitFactor;
			}
			set
			{
				if ((this._SplitFactor != value))
				{
					this.OnSplitFactorChanging(value);
					this.SendPropertyChanging();
					this._SplitFactor = value;
					this.SendPropertyChanged("SplitFactor");
					this.OnSplitFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Earnings", DbType="Int")]
		public System.Nullable<int> Earnings
		{
			get
			{
				return this._Earnings;
			}
			set
			{
				if ((this._Earnings != value))
				{
					this.OnEarningsChanging(value);
					this.SendPropertyChanging();
					this._Earnings = value;
					this.SendPropertyChanged("Earnings");
					this.OnEarningsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dividends", DbType="Float")]
		public System.Nullable<double> Dividends
		{
			get
			{
				return this._Dividends;
			}
			set
			{
				if ((this._Dividends != value))
				{
					this.OnDividendsChanging(value);
					this.SendPropertyChanging();
					this._Dividends = value;
					this.SendPropertyChanged("Dividends");
					this.OnDividendsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.symbols")]
	public partial class symbols : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _symbolID;
		
		private string _symbol;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsymbolIDChanging(int value);
    partial void OnsymbolIDChanged();
    partial void OnsymbolChanging(string value);
    partial void OnsymbolChanged();
    #endregion
		
		public symbols()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_symbolID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int symbolID
		{
			get
			{
				return this._symbolID;
			}
			set
			{
				if ((this._symbolID != value))
				{
					this.OnsymbolIDChanging(value);
					this.SendPropertyChanging();
					this._symbolID = value;
					this.SendPropertyChanged("symbolID");
					this.OnsymbolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_symbol", DbType="VarChar(99)")]
		public string symbol
		{
			get
			{
				return this._symbol;
			}
			set
			{
				if ((this._symbol != value))
				{
					this.OnsymbolChanging(value);
					this.SendPropertyChanging();
					this._symbol = value;
					this.SendPropertyChanged("symbol");
					this.OnsymbolChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stageTwo_AllFileData")]
	public partial class stageTwo_AllFileData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _symbolID;
		
		private string _symbol;
		
		private System.Nullable<int> _Date;
		
		private System.Nullable<int> _Time;
		
		private System.Nullable<decimal> _Open;
		
		private System.Nullable<decimal> _High;
		
		private System.Nullable<decimal> _Low;
		
		private System.Nullable<decimal> _Close;
		
		private System.Nullable<decimal> _Volume;
		
		private System.Nullable<float> _SplitFactor;
		
		private System.Nullable<int> _Earnings;
		
		private System.Nullable<double> _Dividends;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsymbolIDChanging(System.Nullable<int> value);
    partial void OnsymbolIDChanged();
    partial void OnsymbolChanging(string value);
    partial void OnsymbolChanged();
    partial void OnDateChanging(System.Nullable<int> value);
    partial void OnDateChanged();
    partial void OnTimeChanging(System.Nullable<int> value);
    partial void OnTimeChanged();
    partial void OnOpenChanging(System.Nullable<decimal> value);
    partial void OnOpenChanged();
    partial void OnHighChanging(System.Nullable<decimal> value);
    partial void OnHighChanged();
    partial void OnLowChanging(System.Nullable<decimal> value);
    partial void OnLowChanged();
    partial void OnCloseChanging(System.Nullable<decimal> value);
    partial void OnCloseChanged();
    partial void OnVolumeChanging(System.Nullable<decimal> value);
    partial void OnVolumeChanged();
    partial void OnSplitFactorChanging(System.Nullable<float> value);
    partial void OnSplitFactorChanged();
    partial void OnEarningsChanging(System.Nullable<int> value);
    partial void OnEarningsChanged();
    partial void OnDividendsChanging(System.Nullable<double> value);
    partial void OnDividendsChanged();
    #endregion
		
		public stageTwo_AllFileData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_symbolID", DbType="Int")]
		public System.Nullable<int> symbolID
		{
			get
			{
				return this._symbolID;
			}
			set
			{
				if ((this._symbolID != value))
				{
					this.OnsymbolIDChanging(value);
					this.SendPropertyChanging();
					this._symbolID = value;
					this.SendPropertyChanged("symbolID");
					this.OnsymbolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_symbol", DbType="VarChar(99)")]
		public string symbol
		{
			get
			{
				return this._symbol;
			}
			set
			{
				if ((this._symbol != value))
				{
					this.OnsymbolChanging(value);
					this.SendPropertyChanging();
					this._symbol = value;
					this.SendPropertyChanged("symbol");
					this.OnsymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Int")]
		public System.Nullable<int> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Int")]
		public System.Nullable<int> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Open]", Storage="_Open", DbType="Money")]
		public System.Nullable<decimal> Open
		{
			get
			{
				return this._Open;
			}
			set
			{
				if ((this._Open != value))
				{
					this.OnOpenChanging(value);
					this.SendPropertyChanging();
					this._Open = value;
					this.SendPropertyChanged("Open");
					this.OnOpenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_High", DbType="Money")]
		public System.Nullable<decimal> High
		{
			get
			{
				return this._High;
			}
			set
			{
				if ((this._High != value))
				{
					this.OnHighChanging(value);
					this.SendPropertyChanging();
					this._High = value;
					this.SendPropertyChanged("High");
					this.OnHighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Low", DbType="Money")]
		public System.Nullable<decimal> Low
		{
			get
			{
				return this._Low;
			}
			set
			{
				if ((this._Low != value))
				{
					this.OnLowChanging(value);
					this.SendPropertyChanging();
					this._Low = value;
					this.SendPropertyChanged("Low");
					this.OnLowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Close]", Storage="_Close", DbType="Money")]
		public System.Nullable<decimal> Close
		{
			get
			{
				return this._Close;
			}
			set
			{
				if ((this._Close != value))
				{
					this.OnCloseChanging(value);
					this.SendPropertyChanging();
					this._Close = value;
					this.SendPropertyChanged("Close");
					this.OnCloseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Decimal(28,4)")]
		public System.Nullable<decimal> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplitFactor", DbType="Real")]
		public System.Nullable<float> SplitFactor
		{
			get
			{
				return this._SplitFactor;
			}
			set
			{
				if ((this._SplitFactor != value))
				{
					this.OnSplitFactorChanging(value);
					this.SendPropertyChanging();
					this._SplitFactor = value;
					this.SendPropertyChanged("SplitFactor");
					this.OnSplitFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Earnings", DbType="Int")]
		public System.Nullable<int> Earnings
		{
			get
			{
				return this._Earnings;
			}
			set
			{
				if ((this._Earnings != value))
				{
					this.OnEarningsChanging(value);
					this.SendPropertyChanging();
					this._Earnings = value;
					this.SendPropertyChanged("Earnings");
					this.OnEarningsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dividends", DbType="Float")]
		public System.Nullable<double> Dividends
		{
			get
			{
				return this._Dividends;
			}
			set
			{
				if ((this._Dividends != value))
				{
					this.OnDividendsChanging(value);
					this.SendPropertyChanging();
					this._Dividends = value;
					this.SendPropertyChanged("Dividends");
					this.OnDividendsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Calendar")]
	public partial class Calendar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _CalendarDate;
		
		private System.Nullable<int> _intDate;
		
		private System.Nullable<int> _dayNumber;
		
		private string _dayName;
		
		private string _shortDayName;
		
		private System.Nullable<int> _monthNumber;
		
		private string _monthName;
		
		private string _shortMonthName;
		
		private System.Nullable<int> _yearNumber;
		
		private string _stringDate1;
		
		private string _stringDate2;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCalendarDateChanging(System.DateTime value);
    partial void OnCalendarDateChanged();
    partial void OnintDateChanging(System.Nullable<int> value);
    partial void OnintDateChanged();
    partial void OndayNumberChanging(System.Nullable<int> value);
    partial void OndayNumberChanged();
    partial void OndayNameChanging(string value);
    partial void OndayNameChanged();
    partial void OnshortDayNameChanging(string value);
    partial void OnshortDayNameChanged();
    partial void OnmonthNumberChanging(System.Nullable<int> value);
    partial void OnmonthNumberChanged();
    partial void OnmonthNameChanging(string value);
    partial void OnmonthNameChanged();
    partial void OnshortMonthNameChanging(string value);
    partial void OnshortMonthNameChanged();
    partial void OnyearNumberChanging(System.Nullable<int> value);
    partial void OnyearNumberChanged();
    partial void OnstringDate1Changing(string value);
    partial void OnstringDate1Changed();
    partial void OnstringDate2Changing(string value);
    partial void OnstringDate2Changed();
    #endregion
		
		public Calendar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarDate", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime CalendarDate
		{
			get
			{
				return this._CalendarDate;
			}
			set
			{
				if ((this._CalendarDate != value))
				{
					this.OnCalendarDateChanging(value);
					this.SendPropertyChanging();
					this._CalendarDate = value;
					this.SendPropertyChanged("CalendarDate");
					this.OnCalendarDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intDate", DbType="Int")]
		public System.Nullable<int> intDate
		{
			get
			{
				return this._intDate;
			}
			set
			{
				if ((this._intDate != value))
				{
					this.OnintDateChanging(value);
					this.SendPropertyChanging();
					this._intDate = value;
					this.SendPropertyChanged("intDate");
					this.OnintDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dayNumber", DbType="Int")]
		public System.Nullable<int> dayNumber
		{
			get
			{
				return this._dayNumber;
			}
			set
			{
				if ((this._dayNumber != value))
				{
					this.OndayNumberChanging(value);
					this.SendPropertyChanging();
					this._dayNumber = value;
					this.SendPropertyChanged("dayNumber");
					this.OndayNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dayName", DbType="VarChar(99)")]
		public string dayName
		{
			get
			{
				return this._dayName;
			}
			set
			{
				if ((this._dayName != value))
				{
					this.OndayNameChanging(value);
					this.SendPropertyChanging();
					this._dayName = value;
					this.SendPropertyChanged("dayName");
					this.OndayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortDayName", DbType="Char(3)")]
		public string shortDayName
		{
			get
			{
				return this._shortDayName;
			}
			set
			{
				if ((this._shortDayName != value))
				{
					this.OnshortDayNameChanging(value);
					this.SendPropertyChanging();
					this._shortDayName = value;
					this.SendPropertyChanged("shortDayName");
					this.OnshortDayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monthNumber", DbType="Int")]
		public System.Nullable<int> monthNumber
		{
			get
			{
				return this._monthNumber;
			}
			set
			{
				if ((this._monthNumber != value))
				{
					this.OnmonthNumberChanging(value);
					this.SendPropertyChanging();
					this._monthNumber = value;
					this.SendPropertyChanged("monthNumber");
					this.OnmonthNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monthName", DbType="VarChar(99)")]
		public string monthName
		{
			get
			{
				return this._monthName;
			}
			set
			{
				if ((this._monthName != value))
				{
					this.OnmonthNameChanging(value);
					this.SendPropertyChanging();
					this._monthName = value;
					this.SendPropertyChanged("monthName");
					this.OnmonthNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortMonthName", DbType="Char(3)")]
		public string shortMonthName
		{
			get
			{
				return this._shortMonthName;
			}
			set
			{
				if ((this._shortMonthName != value))
				{
					this.OnshortMonthNameChanging(value);
					this.SendPropertyChanging();
					this._shortMonthName = value;
					this.SendPropertyChanged("shortMonthName");
					this.OnshortMonthNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yearNumber", DbType="Int")]
		public System.Nullable<int> yearNumber
		{
			get
			{
				return this._yearNumber;
			}
			set
			{
				if ((this._yearNumber != value))
				{
					this.OnyearNumberChanging(value);
					this.SendPropertyChanging();
					this._yearNumber = value;
					this.SendPropertyChanged("yearNumber");
					this.OnyearNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stringDate1", DbType="VarChar(99)")]
		public string stringDate1
		{
			get
			{
				return this._stringDate1;
			}
			set
			{
				if ((this._stringDate1 != value))
				{
					this.OnstringDate1Changing(value);
					this.SendPropertyChanging();
					this._stringDate1 = value;
					this.SendPropertyChanged("stringDate1");
					this.OnstringDate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stringDate2", DbType="VarChar(99)")]
		public string stringDate2
		{
			get
			{
				return this._stringDate2;
			}
			set
			{
				if ((this._stringDate2 != value))
				{
					this.OnstringDate2Changing(value);
					this.SendPropertyChanging();
					this._stringDate2 = value;
					this.SendPropertyChanged("stringDate2");
					this.OnstringDate2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stageOne_OneFileData")]
	public partial class stageOne_OneFileData
	{
		
		private System.Nullable<int> _Date;
		
		private System.Nullable<int> _Time;
		
		private System.Nullable<decimal> _Open;
		
		private System.Nullable<decimal> _High;
		
		private System.Nullable<decimal> _Low;
		
		private System.Nullable<decimal> _Close;
		
		private System.Nullable<float> _Volume;
		
		private System.Nullable<float> _SplitFactor;
		
		private System.Nullable<int> _Earnings;
		
		private string _Dividends;
		
		public stageOne_OneFileData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Int")]
		public System.Nullable<int> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Int")]
		public System.Nullable<int> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Open]", Storage="_Open", DbType="Money")]
		public System.Nullable<decimal> Open
		{
			get
			{
				return this._Open;
			}
			set
			{
				if ((this._Open != value))
				{
					this._Open = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_High", DbType="Money")]
		public System.Nullable<decimal> High
		{
			get
			{
				return this._High;
			}
			set
			{
				if ((this._High != value))
				{
					this._High = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Low", DbType="Money")]
		public System.Nullable<decimal> Low
		{
			get
			{
				return this._Low;
			}
			set
			{
				if ((this._Low != value))
				{
					this._Low = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Close]", Storage="_Close", DbType="Money")]
		public System.Nullable<decimal> Close
		{
			get
			{
				return this._Close;
			}
			set
			{
				if ((this._Close != value))
				{
					this._Close = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Real")]
		public System.Nullable<float> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this._Volume = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplitFactor", DbType="Real")]
		public System.Nullable<float> SplitFactor
		{
			get
			{
				return this._SplitFactor;
			}
			set
			{
				if ((this._SplitFactor != value))
				{
					this._SplitFactor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Earnings", DbType="Int")]
		public System.Nullable<int> Earnings
		{
			get
			{
				return this._Earnings;
			}
			set
			{
				if ((this._Earnings != value))
				{
					this._Earnings = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dividends", DbType="VarChar(99)")]
		public string Dividends
		{
			get
			{
				return this._Dividends;
			}
			set
			{
				if ((this._Dividends != value))
				{
					this._Dividends = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
